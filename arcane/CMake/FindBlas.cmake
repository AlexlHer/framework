#
# Find Blas libraries
#
# This module defines
# BLAS_LIBRARY
# BLAS_FOUND

FIND_LIBRARY(BLAS_LIBRARY blas)
MESSAGE(STATUS "BLAS_LIBRARY = ${BLAS_LIBRARY}")

#FIND_PATH(MKL_BLAS_INCLUDE_DIR mkl_blas.h)
#MESSAGE(STATUS "MKL_BLAS_INCLUDE_DIR = ${MKL_BLAS_INCLUDE_DIR}")

#FIND_LIBRARY(MKL_BLAS_LIBRARY mkl_core)
#MESSAGE(STATUS "MKL_BLAS_LIBRARY = ${MKL_BLAS_LIBRARY}")


SET(BLAS_FOUND "NO")
IF(BLAS_LIBRARY)
#   MESSAGE(STATUS "STANDARD BLAS HAS BEEN FOUND")
#   MESSAGE(STATUS "BLAS_LIBRARY = " ${BLAS_LIBRARY})
  SET(BLAS_FOUND "YES")
#ELSE(BLAS_LIBRARY)
#   MESSAGE(STATUS "No BLAS, trying MKL")
#   IF(MKL_BLAS_INCLUDE_DIR)
#      IF(MKL_BLAS_LIBRARY)
#        MESSAGE(STATUS "MKL_BLAS_LIBRARY = ${MKL_BLAS_LIBRARY}")
#        MESSAGE(STATUS "MKL_BLAS_INCLUDE_DIR = ${MKL_BLAS_INCLUDE_DIR}")
#        SET(BLAS_FOUND "YES")
#        SET(BLAS_LIBRARY ${MKL_BLAS_LIBRARY})
#        SET(BLAS_INCLUDE_DIRS ${MKL_BLAS_INCLUDE_DIR})
#      ENDIF(MKL_BLAS_LIBRARY)
#   ENDIF(MKL_BLAS_INCLUDE_DIR)
ENDIF(BLAS_LIBRARY)


