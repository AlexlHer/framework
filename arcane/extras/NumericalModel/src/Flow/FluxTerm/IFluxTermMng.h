// -*- tab-width: 2; indent-tabs-mode: nil; coding: utf-8-with-signature -*-
#ifndef IFLUXTERMMNG_H
#define IFLUXTERMMNG_H
/* Author : haeberlf at Wed Aug 27 16:51:28 2008
 * Generated by createNew
 */

#include "Numerics/LinearSolver/IIndexManager.h"
#include "Numerics/LinearSolver/ILinearSolver.h"
#include "Numerics/LinearSolver/ILinearSystemVisitor.h"
#include "Numerics/LinearSolver/ILinearSystemBuilder.h"
#include "Numerics/LinearSolver/Impl/LinearSystemOneStepBuilder.h"

#include "Numerics/BCs/IBoundaryCondition.h"
#include "Numerics/BCs/IBoundaryConditionMng.h"

#include "Numerics/DiscreteOperator/IDiscreteOperator.h"

class IFluxTermMng
{
public:
  /** Constructeur de la classe */
  IFluxTermMng()
    {
      ;
    }

  /** Destructeur de la classe */
  virtual ~IFluxTermMng() { }

public:

  //! Initialisation
  virtual void init() = 0;

  //---------------------------------------------------------------------------
  //! BoundaryCondition Management
  virtual void setBoundaryConditionMng(IBoundaryConditionMng* bc_flow_mng) = 0;

  //---------------------------------------------------------------------------
  //! Operator Management

  //! Set Discrete Operator
  virtual void setOperator(IDiscreteOperator* op) = 0;

  //! Prepare Operator
  virtual void prepareOperator() = 0;

  //! Set Operator groups
  virtual void getOperatorGroups() = 0;

  //! Clear Operator depending variables
  virtual void clearOperator() = 0;

  //---------------------------------------------------------------------------
  //! Flux Implicit Contributions to a Linear System of Equations

  //! Add contribution of internal faces
  virtual void
  addCInternalFacesContribution(LinearSystemOneStepBuilder* system_builder,
      IIndexManager* index_manager,
      IIndexManager::Equation flow_eq,
      IIndexManager::Entry u_entry) = 0;

  //! Add contribution of internal faces with bdry faces in stencil
  virtual void
  addCFInternalFacesContribution(LinearSystemOneStepBuilder* system_builder,
      IIndexManager* index_manager,
      IIndexManager::Equation flow_eq,
      IIndexManager::Entry u_entry,
      IIndexManager::Entry uhb_Fi) = 0;

  //! Add contribution of bdry faces
  virtual void
  addBoundaryFacesContribution(LinearSystemOneStepBuilder* system_builder,
      IIndexManager* index_manager,
      IIndexManager::Equation flow_eq,
      IIndexManager::Entry u_entry,
      IIndexManager::Entry uboundary_entry) = 0;

  //! Add bdry equation contributions
  virtual void
  addBoundaryNonDirichletFacesContribution(LinearSystemOneStepBuilder* system_builder,
      IIndexManager* index_manager,
      IIndexManager::Equation boundary_eq,
      IIndexManager::Entry u_entry,
      IIndexManager::Entry uboundary_entry) = 0;

  //---------------------------------------------------------------------------
  //! Flux Explicit Values Computation
  virtual void
  computeCInternalFacesFluxValues(VariableFaceReal* ptr_face_normal_flux_velocity,
      const VariableCellReal& cell_pressure) = 0;

  virtual void
  computeCFInternalFacesFluxValues(VariableFaceReal* ptr_face_normal_flux_velocity,
      const VariableCellReal& cell_pressure,
      const VariableFaceReal& boundary_pressure) = 0;

  virtual void
  computeBoundaryFacesFluxValues(VariableFaceReal* ptr_face_normal_flux_velocity,
      const VariableCellReal& cell_pressure,
      const VariableFaceReal& boundary_pressure) = 0;

};

#endif /* IFLUXTERMMNG_H */
